-- [VIII] Sequence : 순차번호 생성기. 인위적인 PK 사용 용도
DROP SEQUENCE FRIEND_SEQ;
CREATE SEQUENCE FRIEND_SEQ
    START WITH 1 -- 1부터 시작(기본값)
    INCREMENT BY 1 -- 1씩 증가(기본값)
    MAXVALUE 9999 -- 최대값
    MINVALUE 1    -- 최소값
    NOCACHE
    NOCYCLE;
SELECT FRIEND_SEQ.NEXTVAL FROM DUAL; -- 다음 순차번호 생성
SELECT FRIEND_SEQ.CURRVAL FROM DUAL; -- 시퀀스의 현재 값
-- ex1. FRIEND테이블(NO1,2,3-PK, NAME, TEL, ADDDRESS, LAST_MODIFY)
DROP SEQUENCE FRIEND_SEQ;
CREATE SEQUENCE FRIEND_SEQ MAXVALUE 99999 NOCACHE NOCYCLE;
DROP TABLE FRIEND;
CREATE TABLE FRIEND(
    NO      NUMBER(5) PRIMARY KEY,
    NAME    VARCHAR2(30) NOT NULL,
    TEL     VARCHAR2(20) UNIQUE, -- NULL허용. NULL이 아닐 때는 유일한 값
    ADDRESS VARCHAR2(255),
    LAST_MODIFY DATE DEFAULT SYSDATE
);
INSERT INTO FRIEND (NO, NAME, TEL, ADDRESS)
    VALUES (FRIEND_SEQ.NEXTVAL, '홍길동', NULL, '서울시 관악구'); -- 3번 실행 가능
SELECT * FROM FRIEND;
INSERT INTO FRIEND (NO, NAME, TEL, ADDRESS)
    VALUES (FRIEND_SEQ.NEXTVAL, NULL, '010-9999-9999','서울'); -- 에러(NOT NULL)
INSERT INTO FRIEND (NO, NAME, TEL, ADDRESS)
    VALUES (FRIEND_SEQ.NEXTVAL, '박길동', '010-9999-9999','서울');
SELECT * FROM FRIEND;

-- ex2. FRIEND테이블(NO20240924001, 날짜002-PK, NAME, TEL, ADDDRESS, LAST_MODIFY)
DROP SEQUENCE FRIEND_SEQ;
CREATE SEQUENCE FRIEND_SEQ MAXVALUE 999 NOCACHE NOCYCLE;
DROP TABLE FRIEND;
CREATE TABLE FRIEND(
    NO      NUMBER(11) PRIMARY KEY,
    NAME    VARCHAR2(30) NOT NULL,
    TEL     VARCHAR2(20) UNIQUE, -- NULL허용. NULL이 아닐 때는 유일한 값
    ADDRESS VARCHAR2(255),
    LAST_MODIFY DATE DEFAULT SYSDATE
);
SELECT TO_CHAR(SYSDATE, 'YYYYMMDD')||TRIM(TO_CHAR(33, '000')) FROM DUAL;
INSERT INTO FRIEND (NO, NAME, TEL, ADDRESS)
    VALUES (TO_CHAR(SYSDATE, 'YYYYMMDD') ||TRIM(TO_CHAR(FRIEND_SEQ.NEXTVAL, '000')), 
            '홍길동', NULL, '서울시 관악구'); 
SELECT * FROM FRIEND;

-- QUIZ
DROP TABLE MEMBER;
DROP TABLE MEMBER_LEVEL;
DROP SEQUENCE MEMBER_MNO_SQ;

CREATE TABLE MEMBER_LEVEL(
    LEVELNO   NUMBER(1) PRIMARY KEY,
    LEVELNAME VARCHAR2(10) NOT NULL);

CREATE SEQUENCE MEMBER_MNO_SQ MAXVALUE 999999999 NOCACHE NOCYCLE;
CREATE TABLE MEMBER(
    mNO     NUMBER(9) PRIMARY KEY,
    mNAME   VARCHAR2(30) NOT NULL,
    mPW     VARCHAR2(8)  NOT NULL,
    mEMAIL  VARCHAR2(50) UNIQUE,
    mPOINT  NUMBER(9)    CHECK(mPOINT>=0),
    mRDATE  DATE         DEFAULT SYSDATE,
    LEVELNO NUMBER(1)    DEFAULT 0 REFERENCES MEMBER_LEVEL(LEVELNO)  
);

INSERT INTO MEMBER_LEVEL VALUES (-1, 'black');
INSERT INTO MEMBER_LEVEL VALUES (0, '일반');
INSERT INTO MEMBER_LEVEL VALUES (1, '실버');
INSERT INTO MEMBER_LEVEL VALUES (2, '골드');
SELECT * FROM MEMBER_LEVEL;
INSERT INTO MEMBER (mNO, mNAME, mPW, mEMAIL, mPOINT)
    VALUES (MEMBER_MNO_SQ.NEXTVAL, '홍길동', 'aa', 'hong@hong.com', 0);
INSERT INTO MEMBER (mNO, mNAME, mPW, mEMAIL, mPOINT, mRDATE, LEVELNO)
    VALUES (MEMBER_MNO_SQ.NEXTVAL, '신길동', 'bb', 'sin@sin.com', 1000,
            TO_DATE('22/04/01','RR/MM/DD'), 1);
INSERT INTO MEMBER (mNO, mNAME, mPW, mEMAIL, mPOINT, mRDATE, LEVELNO)
    VALUES (MEMBER_MNO_SQ.NEXTVAL, '김길동', 'bb', 'kim@sin.com', 1000,
            '22/04/01', 1);
SELECT * FROM MEMBER;
-- 테스트 출력 내용
SELECT MNO, MNAME, TO_CHAR(MRDATE,'YYYY-MM-DD') MRDATE, MEMAIL mmail, 
        mPOINT POINT, LEVELNAME||'고객' levelname
    FROM MEMBER_LEVEL L, MEMBER M
    WHERE L.LEVELNO = M.LEVELNO;    